Комментарии к коммитам в Git
============================

:date: 2012-03-03
:slug: git-comments
:tags: git
:author: Наташа Юматова
:summary:
    Привычка писать качественные сообщения к коммитам делает работу с системой
    контроля версий намного проще. Для объяснения того, как, на мой взгляд,
    правильно писать однострочные комментарии в Git, я подготовила `презентацию`_.

Привычка писать качественные сообщения к коммитам делает работу с системой
контроля версий намного проще. Для объяснения того, как, на мой взгляд,
правильно писать однострочные комментарии в Git, я подготовила `презентацию`_.

.. _презентацию: http://speakerdeck.com/u/nyumatova/p/commit-messages

.. raw:: html

    <div style="margin: 0 150px 1.5em;">
      <script src="http://speakerdeck.com/embed/4f3fdcf620ec6204640065f0.js"></script>
    </div>

Начнем с обсуждения целей, которые мы преследуем при написании комментариев к
коммитам.

Во-первых, согласитесь, что написание внятных комментариев к коммитам
организует: приходится аккуратней формулировать задачи по проекту и затем четко
выделять код для коммита.

Во-вторых, вспомним, что все мы так или иначе работаем в команде, а значит
нужно попросту соблюдать правила хорошего тона в среде разработчиков - лог
комментариев к коммитам должен быть содержательным и понятным. 

В-третьих, содержательный лог коммитов помогает понять, что будет в новом
релизе (что было сделано за последнее время). При необходимости, по логу
коммитов можно быстро сформировать отчет о работе.

В-четвертых, понятные комментарии помогают быстрей ориентироваться в логе
коммитов. Это может помочь, например, если вы пытаетесь найти место в коде, где
было внесено изменение, вызвавшее ошибку.

Наверняка, каждый из нас сталкивался с ситуацией, когда вместо внятного
комментария к коммиту, он видел в логе что-то неосмысленное или непонятное.
Наша цель спасти свои проекты от таких комментариев.

При формулировке фразы, описывающей изменения в коде, важно помнить, что в Git
есть ограничение на длину первой строки комментария. Оно составляет 79
символов. Идея состоит в том, что первая строка должна лаконично описывать
изменения в коде. Для нас важно помнить про это ограничение, ведь мы говорим
только об однострочных комментариях.

Иногда, при формулировке комментария к коммиту возникают сложности с подбором
нужной фразы, четко описывающей изменения в коде. В связи с этим я хочу
предложить ряд заготовок для формулировок комментариев.

Для тех, кто пишет комментарии на английском, соглашение состоит в том, чтобы
комментарий начинался с глагола в настоящем времени (add, fix, move, etc.).
Окончания прошедшего времени лишь усложняют понимание и визуально мусорят текст
комментария (плюс удлиняют его, что неприемлемо, если вспомнить об ограничении
на 79 символов).

Для тех, кто пишет комментарии на русском, советую начинать с глагола в
прошедшем времени. Просто потому, что так текст будет понятней.

Итак, текст комментария, как правило, представляет собой описание того, что
было исправлено. При этом не нужно описывать, в чем именно была проблема. Если
же код был исправлен на основе issue, то ее формулировка может стать текстом
комментария.

В крупных, сложных проектах часто договариваются начинать текст комментария с
имени приложения, в которое были внесены изменения. В итоге комментарии
оформляются так - app_name: commit message.

Вот и все, что я хотела рассказать о комментариях в Git.
